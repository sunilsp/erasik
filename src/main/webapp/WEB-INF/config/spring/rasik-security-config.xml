<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	    <http pattern="/css/**" request-matcher="ant" security="none"/>
    	<http pattern="/images/**" request-matcher="ant" security="none"/>
    	<http pattern="/js/**" request-matcher="ant" security="none"/>
    	<http pattern="/fonts/**" request-matcher="ant" security="none"/>

<http use-expressions='true' auto-config="true">
		<intercept-url pattern="/security*" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/admin/*" access="hasAnyRole('ROLE_ADMIN')" />
		
</http>


	
 
<authentication-manager>
	   <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
 
		   users-by-username-query="
		      select username,password, enabled 
		      from customer where username=?" 
 
		   authorities-by-username-query="
		      select u.username, ur.authority from customer u, customer_roles ur 
		      where u.CustomerId = ur.CustomerId and u.username =?  " 
 
		/>
	   </authentication-provider>
	</authentication-manager>	
	</beans:beans>