package com.rasik.model;

// Generated Jan 20, 2014 10:30:33 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * Itemtype generated by hbm2java
 */
@Entity
@Table(name = "itemtype", catalog = "rasiknew")
@NamedQueries({
@NamedQuery(name="findItemByDesc",query="from Itemtype it where it.description = :description"),
@NamedQuery(name="findAllItemtypes",query="from Itemtype ")
})
@XmlRootElement(name="itemType")
@XmlAccessorType (XmlAccessType.FIELD)
public class Itemtype implements java.io.Serializable {

	private Integer itemTypeId;
	private String description;
	private Double vatPerc;
	private Set<Items> itemses = new HashSet<Items>(0);

	
	public Itemtype() {
	}

	public Itemtype(String description, Double vatPerc, Set<Items> itemses) {
		this.description = description;
		this.vatPerc = vatPerc;
		this.itemses = itemses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "ItemTypeId", unique = true, nullable = false)
	public Integer getItemTypeId() {
		return this.itemTypeId;
	}

	public void setItemTypeId(Integer itemTypeId) {
		this.itemTypeId = itemTypeId;
	}

	@Column(name = "Description", length = 50)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "VatPerc", precision = 22, scale = 0)
	public Double getVatPerc() {
		return this.vatPerc;
	}

	public void setVatPerc(Double vatPerc) {
		this.vatPerc = vatPerc;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "itemtype")
	public Set<Items> getItemses() {
		return this.itemses;
	}

	public void setItemses(Set<Items> itemses) {
		this.itemses = itemses;
	}

}
